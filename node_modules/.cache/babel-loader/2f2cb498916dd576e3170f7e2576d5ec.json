{"ast":null,"code":"var _jsxFileName = \"/home/will/Documents/react/Plotly3/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { Tabs, Tab, AppBar } from '@material-ui/core';\nimport * as d3 from 'd3';\nimport Chart from './Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentData, setCurrentData] = useState(false);\n  const [tabValue, setTabValue] = useState(0);\n\n  const handleTabs = (e, val) => {\n    setTabValue(val);\n    createPlotData(val);\n  };\n\n  useEffect(() => {\n    createPlotData(0);\n  }, []);\n\n  async function createPlotData(tabIndex) {\n    let year = [];\n    let country = [];\n    let mortality = [];\n    let projectedWithoutWar = [];\n    let projectedFromRecord = [];\n    let miscData = [];\n    await d3.csv('/mortality4.csv', d => {\n      if (d.index == tabIndex) {\n        year.push(d.year);\n        country.push(d.country);\n        mortality.push(d.recordedRate);\n        projectedWithoutWar.push(d.projectedWithoutWar);\n        projectedFromRecord.push(d.projectedFromRecord);\n        miscData.push(d.misc);\n      }\n    });\n    setCurrentData({\n      year: year,\n      country: country[0],\n      mortality: mortality,\n      projectedWithoutWar: projectedWithoutWar,\n      projectedFromRecord: projectedFromRecord,\n      height: mortality[0],\n      yearsAdded: miscData[0],\n      start: miscData[1],\n      end: miscData[2],\n      bio: miscData[3],\n      bio2: miscData[4],\n      bio3: miscData[5],\n      conflictName: miscData[6]\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        variant: \"scrollable\",\n        centered: true,\n        align: 'center',\n        value: tabValue,\n        onChange: handleTabs,\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          style: {\n            maxWidth: 10,\n            color: 'rgb(250,0,0)'\n          },\n          label: \"The Idea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Rwanda\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Syria\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Afghanistan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Bosnia and Herzegovina\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Iraq\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        plotData: currentData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"SEYsqG15Z27MPYiO9yToDB8VaWM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/will/Documents/react/Plotly3/src/App.js"],"names":["useState","useEffect","Tabs","Tab","AppBar","d3","Chart","App","currentData","setCurrentData","tabValue","setTabValue","handleTabs","e","val","createPlotData","tabIndex","year","country","mortality","projectedWithoutWar","projectedFromRecord","miscData","csv","d","index","push","recordedRate","misc","height","yearsAdded","start","end","bio","bio2","bio3","conflictName","maxWidth","color"],"mappings":"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","sourcesContent":["import './App.css';\nimport {useState, useEffect} from 'react';\nimport { Tabs, Tab, AppBar } from '@material-ui/core';\nimport * as d3 from 'd3'\nimport Chart from './Chart'\n\n\n\n\nfunction App() {\n\n  const[currentData, setCurrentData] = useState(false);\n  const[tabValue, setTabValue]= useState(0)\n  const handleTabs=(e, val) => {setTabValue(val);createPlotData(val);}\n\n  useEffect(() => {\n    createPlotData(0)\n  }, []);\n\n  async function createPlotData (tabIndex){\n    let year = []\n    let country = []\n    let mortality = []\n    let projectedWithoutWar = []\n    let projectedFromRecord = []\n    let miscData = []\n    \n      await d3.csv('/mortality4.csv', (d)=> {\n        if(d.index == tabIndex){\n          year.push(d.year)\n          country.push(d.country)\n          mortality.push(d.recordedRate) \n          projectedWithoutWar.push(d.projectedWithoutWar)\n          projectedFromRecord.push(d.projectedFromRecord)\n          \n          miscData.push(d.misc)\n        }})\n\n    setCurrentData({\n      year: year,\n      country:country[0],\n      mortality:mortality,\n      projectedWithoutWar:projectedWithoutWar,\n      projectedFromRecord:projectedFromRecord,\n      height:mortality[0],\n      yearsAdded:miscData[0],\n      start:miscData[1],\n      end:miscData[2],\n      bio:miscData[3],\n      bio2:miscData[4],\n      bio3:miscData[5],\n      conflictName:miscData[6]\n\n    })\n\n\n  }  \n\n    return (\n    <div className='container'>\n        <div>\n            <Tabs variant='scrollable'  centered align={'center'} value={tabValue} onChange={handleTabs}>\n              <Tab style={{maxWidth:10, color:'rgb(250,0,0)'}}label='The Idea'/>\n              <Tab label='Rwanda' />\n              <Tab label='Syria'/>\n              <Tab label='Afghanistan'/>\n              <Tab label='Bosnia and Herzegovina'/>\n              <Tab label='Iraq'/>\n            </Tabs>\n        </div>\n        <div >\n            <Chart plotData={currentData}/>\n        </div>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}